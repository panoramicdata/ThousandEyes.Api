openapi: 3.0.1
info:
  description: |
    This API allows you to list, create, edit, and delete Network and Application Synthetics tests.
  title: Tests API
  version: 7.0.63
externalDocs:
  description: Find out more about Network and Application Synthetics tests
  url: https://docs.thousandeyes.com/product-documentation/internet-and-wan-monitoring/tests#cloud-and-enterprise-agent-based-tests
servers:
- description: ThousandEyes API production URL
  url: https://api.thousandeyes.com/v7
security:
- BearerAuth: []
tags:
- description: Get all tests
  name: Tests
- description: Agent to Server test management operations
  name: Agent to Server Tests
- description: Agent to Agent test management operations
  name: Agent to Agent Tests
- description: BGP test management operations
  name: BGP Tests
- description: DNS Server test management operations
  name: DNS Server Tests
- description: DNS Trace test management operations
  name: DNS Trace Tests
- description: DNSSEC test management operations
  name: DNSSEC Tests
- description: HTTP Server test management operations
  name: HTTP Server Tests
- description: Page Load test management operations
  name: Page Load Tests
- description: Web Transactions test management operations
  name: Web Transaction Tests
- description: API test management operations
  name: API Tests
- description: FTP Server test management operations
  name: FTP Server Tests
- description: SIP Server test management operations
  name: SIP Server Tests
- description: Voice test management operations
  name: Voice Tests
- name: Path Visualization Interface Groups
paths:
  /tests:
    get:
      description: |
        Returns configured tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List configured tests
      tags:
      - Tests
  /tests/bgp:
    get:
      description: |
        Returns a list of BGP tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getBgpTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BgpTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List BGP tests
      tags:
      - BGP Tests
    post:
      description: Creates a new BGP test. This method requires Account Admin permissions.
      operationId: createBgpTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion takes place if the query parameter is not present.\
          \ To expand the `monitors` sub-resource, pass the `?expand=monitor` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - alert-rule
          - monitor
          items:
            $ref: '#/components/schemas/ExpandBgpTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BgpTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BgpTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create BGP test
      tags:
      - BGP Tests
  /tests/bgp/{testId}:
    delete:
      description: Deletes a BGP test. This method requires Account Admin permissions.
      operationId: deleteBgpTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete BGP test
      tags:
      - BGP Tests
    get:
      description: "Returns details for a BGP test, including name, intervals, targets,\
        \ alert rules and agents."
      operationId: getBgpTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion takes place if the query parameter is not present.\
          \ To expand the `monitors` sub-resource, pass the `?expand=monitor` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - alert-rule
          - monitor
          items:
            $ref: '#/components/schemas/ExpandBgpTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BgpTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get BGP test
      tags:
      - BGP Tests
    put:
      description: |-
        Updates a BGP test. This method requires Account Admin permissions. The target test cannot be a live share or saved event.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateBgpTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion takes place if the query parameter is not present.\
          \ To expand the `monitors` sub-resource, pass the `?expand=monitor` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - alert-rule
          - monitor
          items:
            $ref: '#/components/schemas/ExpandBgpTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBgpTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/BgpTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update BGP test
      tags:
      - BGP Tests
  /tests/agent-to-server:
    get:
      description: |
        Returns a list of Agent to Server tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getAgentToServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToServerTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Agent to Server tests
      tags:
      - Agent to Server Tests
    post:
      description: Creates a new Agent to Server test. This method requires Account
        Admin permissions.
      operationId: createAgentToServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentToServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToServerTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Agent to Server test
      tags:
      - Agent to Server Tests
  /tests/agent-to-server/{testId}:
    delete:
      description: Deletes an Agent to Server test. This method requires Account Admin
        permissions.
      operationId: deleteAgentToServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Agent to Server test
      tags:
      - Agent to Server Tests
    get:
      description: "Returns details for a Agent to Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getAgentToServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToServerTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Agent to Server test
      tags:
      - Agent to Server Tests
    put:
      description: Updates an Agent to Server test. This method requires Account Admin
        permissions.
      operationId: updateAgentToServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentToServerTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToServerTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Agent to Server test
      tags:
      - Agent to Server Tests
  /tests/agent-to-agent:
    get:
      description: |
        Returns a list of Agent to Agent tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getAgentToAgentTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToAgentTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Agent to Agent tests
      tags:
      - Agent to Agent Tests
    post:
      description: Creates a new Agent to Agent test. This method requires Account
        Admin permissions.
      operationId: createAgentToAgentTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentToAgentTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToAgentTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Agent to Agent test
      tags:
      - Agent to Agent Tests
  /tests/agent-to-agent/{testId}:
    delete:
      description: Deletes the specified Agent to Agent test. This method requires
        Account Admin permissions.
      operationId: deleteAgentToAgentTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Agent to Agent test
      tags:
      - Agent to Agent Tests
    get:
      description: "Returns details for a Agent to Agent test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getAgentToAgentTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToAgentTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Agent to Agent test
      tags:
      - Agent to Agent Tests
    put:
      description: Updates a Agent to Agent test. This method requires Account Admin
        permissions.
      operationId: updateAgentToAgentTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentToAgentTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/AgentToAgentTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Agent to Agent test
      tags:
      - Agent to Agent Tests
  /tests/dns-server:
    get:
      description: |
        Returns a list of all DNS Server tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getDnsServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsServerTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List DNS Server tests
      tags:
      - DNS Server Tests
    post:
      description: Creates a new DNS Server test. This method requires Account Admin
        permissions.
      operationId: createDnsServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsServerTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS Server test
      tags:
      - DNS Server Tests
  /tests/dns-server/{testId}:
    delete:
      description: 'Deletes the specified DNS Server test. This method requires Account
        Admin permissions. '
      operationId: deleteDnsServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete DNS Server test
      tags:
      - DNS Server Tests
    get:
      description: "Returns details for a DNS Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getDnsServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsServerTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get DNS Server test
      tags:
      - DNS Server Tests
    put:
      description: |-
        Updates a DNS Server test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateDnsServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsServerTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsServerTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update DNS Server test
      tags:
      - DNS Server Tests
  /tests/dns-trace:
    get:
      description: |
        Returns a list of all DNS Trace tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getDnsTraceTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsTraceTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List DNS Trace tests
      tags:
      - DNS Trace Tests
    post:
      description: 'Creates a new DNS Trace test. This method requires Account Admin
        permissions. '
      operationId: createDnsTraceTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsTraceTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsTraceTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNS Trace test
      tags:
      - DNS Trace Tests
  /tests/dns-trace/{testId}:
    delete:
      description: 'Deletes the specified DNS Trace test. This method requires Account
        Admin permissions. '
      operationId: deleteDnsTraceTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete DNS Trace test
      tags:
      - DNS Trace Tests
    get:
      description: "Returns details for a DNS Trace test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getDnsTraceTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsTraceTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get DNS Trace test
      tags:
      - DNS Trace Tests
    put:
      description: |-
        Updates a DNS Trace test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateDnsTraceTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsTraceTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsTraceTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update DNS Trace test
      tags:
      - DNS Trace Tests
  /tests/dnssec:
    get:
      description: |
        Returns a list of all DNSSEC tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getDnsSecTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsSecTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List DNSSEC tests
      tags:
      - DNSSEC Tests
    post:
      description: 'Creates a new DNSSEC test. This method requires Account Admin
        permissions. '
      operationId: createDnsSecTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsSecTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsSecTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create DNSSEC test
      tags:
      - DNSSEC Tests
  /tests/dnssec/{testId}:
    delete:
      description: Deletes the specified DNSSEC test. This method requires Account
        Admin permissions.
      operationId: deleteDnsSecTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete DNSSEC test
      tags:
      - DNSSEC Tests
    get:
      description: "Returns details for a DNSSEC test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getDnsSecTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsSecTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get DNSSEC test
      tags:
      - DNSSEC Tests
    put:
      description: |-
        Updates a DNSSEC test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateDnsSecTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DnsSecTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/DnsSecTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update DNSSEC test
      tags:
      - DNSSEC Tests
  /tests/http-server:
    get:
      description: |
        Returns a list of all HTTP Server tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getHttpServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HttpServerTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List HTTP Server tests
      tags:
      - HTTP Server Tests
    post:
      description: 'Creates a new HTTP Server test. This method requires Account Admin
        permissions. '
      operationId: createHttpServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HttpServerTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create HTTP Server test
      tags:
      - HTTP Server Tests
  /tests/http-server/{testId}:
    delete:
      description: Deletes the specified HTTP Server test. This method requires Account
        Admin permissions.
      operationId: deleteHttpServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete HTTP Server test
      tags:
      - HTTP Server Tests
    get:
      description: "Returns details for a HTTP Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getHttpServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HttpServerTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get HTTP Server test
      tags:
      - HTTP Server Tests
    put:
      description: |-
        Updates a HTTP Server test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateHttpServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HttpServerTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/HttpServerTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update HTTP Server test
      tags:
      - HTTP Server Tests
  /tests/page-load:
    get:
      description: |
        Returns a list of all Page Load tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getPageLoadTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLoadTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Page Load tests
      tags:
      - Page Load Tests
    post:
      description: Creates a new Page Load test. This method requires Account Admin
        permissions.
      operationId: createPageLoadTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageLoadTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLoadTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Page Load test
      tags:
      - Page Load Tests
  /tests/page-load/{testId}:
    delete:
      description: 'Deletes the specified Page Load test. This method requires Account
        Admin permissions. '
      operationId: deletePageLoadTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Page Load test
      tags:
      - Page Load Tests
    get:
      description: "Returns details for a Page Load test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getPageLoadTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLoadTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Page Load test
      tags:
      - Page Load Tests
    put:
      description: |-
        Updates a Page Load test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updatePageLoadTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PageLoadTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PageLoadTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Page Load test
      tags:
      - Page Load Tests
  /tests/web-transactions:
    get:
      description: |
        Returns a list of all Web Transactions tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getWebTransactionsTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WebTransactionTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Web Transactions tests
      tags:
      - Web Transaction Tests
    post:
      description: Creates a new Web Transactions test. This method requires Account
        Admin permissions.
      operationId: createWebTransactionsTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebTransactionTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WebTransactionTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Web Transactions test
      tags:
      - Web Transaction Tests
  /tests/web-transactions/{testId}:
    delete:
      description: Deletes the specified Web Transactions test. This method requires
        Account Admin permissions.
      operationId: deleteWebTransactionsTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Web Transactions test
      tags:
      - Web Transaction Tests
    get:
      description: "Returns details for a Web Transactions test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getWebTransactionsTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WebTransactionTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Web Transactions test
      tags:
      - Web Transaction Tests
    put:
      description: |-
        Updates a Web Transactions test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateWebTransactionsTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebTransactionTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WebTransactionTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Web Transactions test
      tags:
      - Web Transaction Tests
  /tests/api:
    get:
      description: |
        Returns a list of all API tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getApiTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApiTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List API tests
      tags:
      - API Tests
    post:
      description: Creates a new API test. This method requires Account Admin permissions.
      operationId: createApiTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApiTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create API test
      tags:
      - API Tests
  /tests/api/{testId}:
    delete:
      description: Deletes the specified API test. This method requires write permissions.
      operationId: deleteApiTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete API test
      tags:
      - API Tests
    get:
      description: Returns details for a API test configuration. Please use `expand`
        parameter to access sub-resources such as alert rules and agents.
      operationId: getApiTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApiTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get API test
      tags:
      - API Tests
    put:
      description: |-
        Updates an API test. The target test cannot be a live share or saved event. This method requires write permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateApiTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/ApiTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update API test
      tags:
      - API Tests
  /tests/ftp-server:
    get:
      description: |
        Returns a list of FTP Server tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getFtpServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FtpServerTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List FTP Server tests
      tags:
      - FTP Server Tests
    post:
      description: Creates a new FTP Server test. This method requires Account Admin
        permissions.
      operationId: createFtpServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtpServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FtpServerTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create FTP Server test
      tags:
      - FTP Server Tests
  /tests/ftp-server/{testId}:
    delete:
      description: Deletes the specified FTP Server test. This method requires Account
        Admin permissions.
      operationId: deleteFtpServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Delete FTP Server test
      tags:
      - FTP Server Tests
    get:
      description: "Returns details for a FTP Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getFtpServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FtpServerTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get FTP Server test
      tags:
      - FTP Server Tests
    put:
      description: |-
        Updates a FTP Server test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateFtpServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FtpServerTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/FtpServerTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update FTP Server test
      tags:
      - FTP Server Tests
  /tests/{testId}/history:
    get:
      description: Retrieve the version history of a specific test.
      operationId: getTestVersionHistory
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The maximum number of version history entries to return. If\
          \ not specified, the default is 50 or the total number of available versions,\
          \ whichever is fewer."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          maximum: 500
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestVersionHistoryResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Get test version history
      tags:
      - Tests
  /tests/sip-server:
    get:
      description: |
        Returns a list of SIP Server tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getSipServerTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SipServerTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List SIP Server tests
      tags:
      - SIP Server Tests
    post:
      description: Creates a new SIP Server test. This method requires Account Admin
        permissions.
      operationId: createSipServerTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipServerTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SipServerTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create SIP Server test
      tags:
      - SIP Server Tests
  /tests/sip-server/{testId}:
    delete:
      description: Deletes the specified SIP Server test. This method requires Account
        Admin permissions.
      operationId: deleteSipServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
      summary: Delete SIP Server test
      tags:
      - SIP Server Tests
    get:
      description: "Returns details for a SIP Server test, including name, intervals,\
        \ targets, alert rules and agents."
      operationId: getSipServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SipServerTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get SIP Server test
      tags:
      - SIP Server Tests
    put:
      description: |-
        Updates a SIP Server test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateSipServerTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SipServerTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/SipServerTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update SIP Server test
      tags:
      - SIP Server Tests
  /tests/voice:
    get:
      description: |
        Returns a list of Voice tests and saved events.

        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: getVoiceTests
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoiceTests'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List Voice tests
      tags:
      - Voice Tests
    post:
      description: Creates a new Voice test. This method requires Account Admin permissions.
      operationId: createVoiceTest
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceTestRequest'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoiceTestResponse'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create Voice test
      tags:
      - Voice Tests
  /tests/voice/{testId}:
    delete:
      description: Deletes the specified Voice test. This method requires Account
        Admin permissions.
      operationId: deleteVoiceTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete Voice test
      tags:
      - Voice Tests
    get:
      description: "Returns details for a Voice test, including name, intervals, targets,\
        \ alert rules and agents."
      operationId: getVoiceTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "The unique identifier for a specific version of the test settings.\
          \ If provided, returns the test configuration as it existed at that version.\
          \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
          \ If not specified, the current version of the test settings is returned."
        in: query
        name: versionId
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoiceTestResponse'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Get Voice test
      tags:
      - Voice Tests
    put:
      description: |-
        Updates a Voice test. The target test cannot be a live share or saved event. This method requires Account Admin permissions.
        **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
      operationId: updateVoiceTest
      parameters:
      - description: Test ID
        in: path
        name: testId
        required: true
        schema:
          example: "202701"
          type: string
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      - description: "Optional parameter on whether or not to expand the test sub-resources.\
          \ By default no expansion is going to take place if the query parameter\
          \ is not present. If the user wishes to expand the `agents` sub-resource,\
          \ they need to pass the `?expand=agent` query."
        explode: false
        in: query
        name: expand
        required: false
        schema:
          example:
          - agent
          - monitor
          items:
            $ref: '#/components/schemas/ExpandTestOptions'
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceTestRequest'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/VoiceTestResponse'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update Voice test
      tags:
      - Voice Tests
  /network/path-vis/interface-groups:
    get:
      description: "Returns a list of all path visualization interface groups. For\
        \ more information about interface groups, see https://docs.thousandeyes.com/product-documentation/end-user-monitoring/viewing-data/endpoint-agent-views-reference#grouping."
      operationId: getPathVisInterfaceGroups
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InterfaceGroups'
          description: OK
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: List interface groups for path visualization
      tags:
      - Path Visualization Interface Groups
    post:
      description: Creates a new path visualization interface group.
      operationId: createPathVisInterfaceGroups
      parameters:
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceGroup'
        required: true
      responses:
        "201":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InterfaceGroup'
          description: Created
          headers:
            Location:
              $ref: '#/components/headers/Location'
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Create interface group for path visualization
      tags:
      - Path Visualization Interface Groups
  /network/path-vis/interface-groups/{interfaceGroupId}:
    delete:
      description: Deletes a path visualization interface group.
      operationId: deletePathVisInterfaceGroup
      parameters:
      - description: ID of the network path vis interface group
        explode: false
        in: path
        name: interfaceGroupId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      responses:
        "204":
          description: No content
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Delete interface group
      tags:
      - Path Visualization Interface Groups
    put:
      description: Updates a path visualization interface group..
      operationId: updatePathVisInterfaceGroup
      parameters:
      - description: ID of the network path vis interface group
        explode: false
        in: path
        name: interfaceGroupId
        required: true
        schema:
          example: "281474976710706"
          type: string
        style: simple
      - description: A unique identifier associated with your account group. You can
          retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note
          that you must be assigned to the target account group. Specifying this parameter
          without being assigned to the target account group will result in an error
          response.
        in: query
        name: aid
        required: false
        schema:
          example: "1234"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceGroup'
        required: true
      responses:
        "200":
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InterfaceGroup'
          description: OK
        "400":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Request validation failed. There are invalid or missing fields
                status: 400
                detail: Your request object contains invalid fields.
                instance: /v7
                errors:
                - code: AM-5432
                  field: firstName
                  message: firstName cannot have fancy characters
                - code: DASH-5622
                  field: password
                  message: Password cannot be blank
              schema:
                $ref: '#/components/schemas/ValidationError'
          description: Bad Request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Insufficient permissions to query endpoint
        "404":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: URI Resource Not Found
                status: 404
                detail: Details explaining if the 404 error is related to an invalid
                  URI or a wrong ID
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Not found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Exhausted rate limit for the organization
        "500":
          content:
            application/problem+json:
              example:
                type: about:blank
                title: Internal server error
                status: 500
                detail: Optional detail about the internal error message.
                instance: /v7
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal server error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Gateway
        default:
          description: An error occurred
      summary: Update interface group
      tags:
      - Path Visualization Interface Groups
components:
  headers:
    Location:
      description: The absolute path to created resource.
      schema:
        example: https://api.thousandeyes.com/v7/link/to/resource/id
        format: uri
        type: string
  parameters:
    InterfaceGroupId:
      description: ID of the network path vis interface group
      explode: false
      in: path
      name: interfaceGroupId
      required: true
      schema:
        example: "281474976710706"
        type: string
      style: simple
    ExpandTest:
      description: "Optional parameter on whether or not to expand the test sub-resources.\
        \ By default no expansion is going to take place if the query parameter is\
        \ not present. If the user wishes to expand the `agents` sub-resource, they\
        \ need to pass the `?expand=agent` query."
      explode: false
      in: query
      name: expand
      required: false
      schema:
        example:
        - agent
        - monitor
        items:
          $ref: '#/components/schemas/ExpandTestOptions'
        type: array
      style: form
    ExpandBgpTest:
      description: "Optional parameter on whether or not to expand the test sub-resources.\
        \ By default no expansion takes place if the query parameter is not present.\
        \ To expand the `monitors` sub-resource, pass the `?expand=monitor` query."
      explode: false
      in: query
      name: expand
      required: false
      schema:
        example:
        - alert-rule
        - monitor
        items:
          $ref: '#/components/schemas/ExpandBgpTestOptions'
        type: array
      style: form
    AccountGroupId:
      description: A unique identifier associated with your account group. You can
        retrieve your `AccountGroupId` from the `/account-groups` endpoint. Note that
        you must be assigned to the target account group. Specifying this parameter
        without being assigned to the target account group will result in an error
        response.
      in: query
      name: aid
      required: false
      schema:
        example: "1234"
        type: string
    TestIdPath:
      description: Test ID
      in: path
      name: testId
      required: true
      schema:
        example: "202701"
        type: string
    VersionId:
      description: "The unique identifier for a specific version of the test settings.\
        \ If provided, returns the test configuration as it existed at that version.\
        \ To retrieve available version IDs, use the `/tests/{testId}/history` endpoint.\
        \ If not specified, the current version of the test settings is returned."
      in: query
      name: versionId
      required: false
      schema:
        example: "1234"
        type: string
  responses:
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Insufficient permissions to query endpoint
    "404":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: URI Resource Not Found
            status: 404
            detail: Details explaining if the 404 error is related to an invalid URI
              or a wrong ID
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Not found
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Exhausted rate limit for the organization
    "500":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Internal server error
            status: 500
            detail: Optional detail about the internal error message.
            instance: /v7
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal server error
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Gateway
    GeneralError:
      description: An error occurred
    "400":
      content:
        application/problem+json:
          example:
            type: about:blank
            title: Request validation failed. There are invalid or missing fields
            status: 400
            detail: Your request object contains invalid fields.
            instance: /v7
            errors:
            - code: AM-5432
              field: firstName
              message: firstName cannot have fancy characters
            - code: DASH-5622
              field: password
              message: Password cannot be blank
          schema:
            $ref: '#/components/schemas/ValidationError'
      description: Bad Request
    "204":
      description: No content
  schemas:
    ExpandTestOptions:
      enum:
      - agent
      - alert-rule
      - monitor
      - label
      - shared-with-account
      example: agent
      type: string
    ExpandBgpTestOptions:
      enum:
      - alert-rule
      - monitor
      - label
      - shared-with-account
      example: monitor
      type: string
    Tests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/SimpleTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    TestRequest:
      allOf:
      - $ref: '#/components/schemas/BaseRequest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsRequest'
        type: object
      required:
      - agents
    BaseRequest:
      properties:
        labels:
          description: Contains list of test label IDs (get `labelId` from `/labels`
            endpoint)
          example:
          - "9842"
          - "1283"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
        sharedWithAccounts:
          description: Contains list of account group IDs. Test is shared with the
            listed account groups (get `aid` from `/account-groups` endpoint)
          example:
          - "1234"
          - "12345"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
        alertRules:
          description: "List of alert rules IDs to apply to the test (get `ruleId`\
            \ from `/alerts/rules` endpoint. If `alertsEnabled` is set to `true` and\
            \ `alertRules` is not included on test creation or update, applicable\
            \ user default alert rules will be used)"
          example:
          - "344753"
          - "212697"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
      type: object
    MonitorsRequest:
      properties:
        monitors:
          description: Contains list of BGP monitor IDs (get `monitorId` from `/monitors`
            endpoint)
          example:
          - "17410"
          - "5"
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
      type: object
    BgpTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedBgpTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    BgpTestRequest:
      allOf:
      - $ref: '#/components/schemas/BgpTest'
      - $ref: '#/components/schemas/BaseRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    UpdateBgpTestRequest:
      allOf:
      - $ref: '#/components/schemas/BaseBgpTest'
      - $ref: '#/components/schemas/BaseRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    BgpTestResponse:
      allOf:
      - $ref: '#/components/schemas/BgpTest'
    AgentToServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedAgentToServerTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    AgentToServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/AgentToServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
      - properties:
          port:
            description: Port number to use for the test. The default port is 80.
            example: 443
            type: integer
        type: object
    AgentToServerTestResponse:
      allOf:
      - $ref: '#/components/schemas/AgentToServerTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    AgentToAgentTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedAgentToAgentTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    AgentToAgentTestRequest:
      allOf:
      - $ref: '#/components/schemas/AgentToAgentTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    AgentToAgentTestResponse:
      allOf:
      - $ref: '#/components/schemas/AgentToAgentTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    DnsServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedDnsServerTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    DnsServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/DnsServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
      - $ref: '#/components/schemas/DnsServersRequest'
    DnsServerTestResponse:
      allOf:
      - $ref: '#/components/schemas/DnsServerTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    DnsTraceTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedDnsTraceTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    DnsTraceTestRequest:
      allOf:
      - $ref: '#/components/schemas/DnsTraceTest'
      - $ref: '#/components/schemas/TestRequest'
    DnsTraceTestResponse:
      allOf:
      - $ref: '#/components/schemas/DnsTraceTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    DnsSecTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedDnsSecTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    DnsSecTestRequest:
      allOf:
      - $ref: '#/components/schemas/DnsSecTest'
      - $ref: '#/components/schemas/TestRequest'
    DnsSecTestResponse:
      allOf:
      - $ref: '#/components/schemas/DnsSecTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    HttpServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedHttpServerTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    HttpServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/HttpServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    HttpServerTestResponse:
      allOf:
      - $ref: '#/components/schemas/HttpServerTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    PageLoadTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedPageLoadTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    PageLoadTestRequest:
      allOf:
      - $ref: '#/components/schemas/PageLoadTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    PageLoadTestResponse:
      allOf:
      - $ref: '#/components/schemas/PageLoadTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    WebTransactionTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedWebTransactionTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    WebTransactionTestRequest:
      allOf:
      - $ref: '#/components/schemas/WebTransactionTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
    WebTransactionTestResponse:
      allOf:
      - $ref: '#/components/schemas/WebTransactionTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    ApiTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedApiTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    ApiTestRequest:
      allOf:
      - $ref: '#/components/schemas/ApiTest'
      - $ref: '#/components/schemas/TestRequest'
    ApiTestResponse:
      allOf:
      - $ref: '#/components/schemas/ApiTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    FtpServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedFtpServerTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    FtpServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/FtpServerTest'
      - $ref: '#/components/schemas/TestRequest'
      - $ref: '#/components/schemas/MonitorsRequest'
      required:
      - password
    FtpServerTestResponse:
      allOf:
      - $ref: '#/components/schemas/FtpServerTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    SipServerTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedSipServerTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    SipServerTestRequest:
      allOf:
      - $ref: '#/components/schemas/UpdateSipServerTest'
      - $ref: '#/components/schemas/TestRequest'
    SipServerTestResponse:
      allOf:
      - $ref: '#/components/schemas/SipServerTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    VoiceTests:
      properties:
        tests:
          items:
            $ref: '#/components/schemas/UnexpandedVoiceTest'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    VoiceTestRequest:
      allOf:
      - $ref: '#/components/schemas/VoiceTest'
      - $ref: '#/components/schemas/TestRequest'
    VoiceTestResponse:
      allOf:
      - $ref: '#/components/schemas/VoiceTest'
      - properties:
          agents:
            $ref: '#/components/schemas/TestAgentsResponse'
        type: object
    InterfaceGroups:
      properties:
        pathVisInterfaceGroups:
          items:
            $ref: '#/components/schemas/InterfaceGroup'
          type: array
        _links:
          $ref: '#/components/schemas/SelfLinks'
      type: object
    InterfaceGroup:
      properties:
        aid:
          description: Account Group Id
          example: "1234"
          readOnly: true
          type: string
        groupId:
          description: Group ID
          example: "281474976710706"
          readOnly: true
          type: string
        groupName:
          description: Name of the path visualization interface group
          example: PathVis Interface Group
          type: string
        ipAddresses:
          description: Array of IP addresses associated with the interface group
          example:
          - 1.1.1.1
          - 8.8.8.8
          items:
            type: string
          type: array
        rdnsRegexes:
          description: Array of RDNS Regexes associated with the interface group
          example:
          - aggr403b-1.iad3.rackspace.net
          - aggr403c-1.iad3.rackspace.net
          items:
            type: string
          readOnly: true
          type: array
      type: object
    TestVersionHistory:
      properties:
        versionTimestamp:
          description: Timestamp when this version was created.
          example: 2022-07-17T22:00:54Z
          format: date-time
          type: string
        testId:
          description: The unique identifier of the test.
          example: "474276"
          type: string
        createdBy:
          description: The user who created the version.
          example: user (user@user.com)
          type: string
        versionId:
          description: The unique identifier for a specific version of the test settings.
          example: "1234"
          type: string
      type: object
    TestVersionHistoryResponse:
      additionalProperties: false
      properties:
        _links:
          $ref: '#/components/schemas/SelfLinks'
        testVersionHistory:
          items:
            $ref: '#/components/schemas/TestVersionHistory'
          type: array
      type: object
    UnauthorizedError:
      properties:
        error:
          example: invalid_token
          type: string
        error_description:
          example: Invalid access token
          type: string
      type: object
    Error:
      properties:
        type:
          description: "A URI reference that identifies the problem type. When this\
            \ member is not present, its value is assumed to be \"about:blank\"."
          type: string
        title:
          description: "A short, human-readable summary of the problem type."
          type: string
        status:
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem.
          type: string
      type: object
    ValidationError:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          errors:
            description: "(Optional) When multiple errors occur, the details for each\
              \ error are listed."
            items:
              $ref: '#/components/schemas/ValidationErrorItem'
            nullable: true
            type: array
        type: object
      type: object
    ValidationErrorItem:
      properties:
        code:
          description: (Optional) A unique error type/code that can be referenced
            in the documentation for further details.
          type: string
        field:
          description: Identifies the field that triggered this particular error.
          type: string
        message:
          description: "A short, human-readable summary of the error."
          type: string
      type: object
    SimpleTest:
      additionalProperties: true
      description: "Each test includes additional fields depending on its `type`.\
        \ Refer `/tests/{type}` endpoint to know the set of fields returned by a given\
        \ `type`."
      properties:
        interval:
          $ref: '#/components/schemas/TestInterval'
        alertsEnabled:
          description: Indicates if alerts are enabled.
          example: true
          type: boolean
        enabled:
          default: true
          description: Test is enabled.
          example: true
          type: boolean
        createdBy:
          description: User that created the test.
          example: user@user.com
          readOnly: true
          type: string
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: A description of the test.
          example: ThousandEyes Test
          type: string
        liveShare:
          description: Indicates if the test is shared with the account group.
          example: false
          readOnly: true
          type: boolean
        modifiedBy:
          description: User that modified the test.
          example: user@user.com
          readOnly: true
          type: string
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        savedEvent:
          description: |
            Indicates if the test is a saved event.

            **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
          readOnly: true
          type: boolean
        testId:
          description: Each test is assigned an unique ID; this is used to access
            test information and results from other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        testName:
          description: The name of the test. Test name must be unique.
          example: ThousandEyes Test
          type: string
        type:
          $ref: '#/components/schemas/TestType'
        _links:
          $ref: '#/components/schemas/TestLinks'
      type: object
    TestInterval:
      default: 60
      description: Interval between test runs in seconds.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1800
      - 3600
      example: 60
      type: integer
    Enabled:
      default: true
      description: Test is enabled.
      example: true
      type: boolean
    TestCreatedBy:
      description: User that created the test.
      example: user@user.com
      readOnly: true
      type: string
    TestCreatedDate:
      description: UTC created date (ISO date-time format).
      example: 2022-07-17T22:00:54Z
      format: date-time
      readOnly: true
      type: string
    TestType:
      description: "This is a read only value, as test type is implicit in the test\
        \ creation url."
      enum:
      - api
      - agent-to-agent
      - agent-to-server
      - bgp
      - http-server
      - page-load
      - web-transactions
      - ftp-server
      - dns-trace
      - dns-server
      - dnssec
      - sip-server
      - voice
      example: agent-to-server
      readOnly: true
      type: string
    TestLinks:
      description: A list of links that can be accessed to get more information
      properties:
        self:
          $ref: '#/components/schemas/TestSelfLink'
        testResults:
          description: Reference to the test results.
          example:
          - href: https://api.thousandeyes.com/v7/test-results/281474976710706/network
          - href: https://api.thousandeyes.com/v7/test-results/281474976710706/path-vis
          items:
            $ref: '#/components/schemas/Link'
          type: array
      readOnly: true
      type: object
    TestSelfLink:
      allOf:
      - $ref: '#/components/schemas/Link'
      - description: Reference to the test.
        example:
          href: "https://api.thousandeyes.com/v7/tests/{type}/281474976710706"
    TestResults:
      description: Reference to the test results.
      example:
      - href: https://api.thousandeyes.com/v7/test-results/281474976710706/network
      - href: https://api.thousandeyes.com/v7/test-results/281474976710706/path-vis
      items:
        $ref: '#/components/schemas/Link'
      type: array
    SelfLinks:
      description: A links object containing the self link.
      properties:
        self:
          $ref: '#/components/schemas/Link'
      readOnly: true
      type: object
    Link:
      description: A hyperlink from the containing resource to a URI.
      properties:
        href:
          description: "Its value is either a URI [RFC3986] or a URI template [RFC6570]."
          example: https://api.thousandeyes.com/v7/link/to/resource/id
          type: string
        templated:
          description: Should be true when the link object's "href" property is a
            URI template.
          type: boolean
        type:
          description: Used as a hint to indicate the media type expected when dereferencing
            the target resource.
          type: string
        deprecation:
          description: Its presence indicates that the link is to be deprecated at
            a future date. Its value is a URL that should provide further information
            about the deprecation.
          type: string
        name:
          description: Its value may be used as a secondary key for selecting link
            objects that share the same relation type.
          type: string
        profile:
          description: A URI that hints about the profile of the target resource.
          type: string
        title:
          description: Intended for labelling the link with a human-readable identifier
          type: string
        hreflang:
          description: Indicates the language of the target resource
          type: string
      required:
      - href
      type: object
    TestAgentsRequest:
      description: Contains list of Agent IDs (get `agentId` from `/agents` endpoint).
      items:
        $ref: '#/components/schemas/TestAgentRequest'
      type: array
    UnexpandedBgpTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - properties:
          enabled:
            $ref: '#/components/schemas/Enabled'
          includeCoveredPrefixes:
            description: Indicate if queries for subprefixes detected under this prefix
              should included.
            example: true
            type: boolean
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
          alertsEnabled:
            description: Indicates if alerts are enabled.
            example: true
            type: boolean
          createdBy:
            $ref: '#/components/schemas/TestCreatedBy'
          createdDate:
            $ref: '#/components/schemas/TestCreatedDate'
          type:
            example: bgp
            readOnly: true
            type: string
          prefix:
            description: "a.b.c.d is a network address, with the prefix length defined\
              \ as e. Prefixes can be any length from 8 to 24."
            type: string
        required:
        - prefix
        type: object
    UnexpandedInstantTest:
      properties:
        createdBy:
          description: User that created the test.
          example: user@user.com
          readOnly: true
          type: string
        createdDate:
          description: UTC created date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        description:
          description: A description of the test.
          example: ThousandEyes Test
          type: string
        liveShare:
          description: Indicates if the test is shared with the account group.
          example: false
          readOnly: true
          type: boolean
        modifiedBy:
          description: User that modified the test.
          example: user@user.com
          readOnly: true
          type: string
        modifiedDate:
          description: UTC last modification date (ISO date-time format).
          example: 2022-07-17T22:00:54Z
          format: date-time
          readOnly: true
          type: string
        savedEvent:
          description: |
            Indicates if the test is a saved event.

            **Note**: **Saved Events** are now called **Private Snapshots** in the user interface. This change does not affect API.
          readOnly: true
          type: boolean
        testId:
          description: Each test is assigned an unique ID; this is used to access
            test information and results from other endpoints.
          example: "281474976710706"
          readOnly: true
          type: string
        testName:
          description: The name of the test. Test name must be unique.
          example: ThousandEyes Test
          type: string
        type:
          $ref: '#/components/schemas/TestType'
        _links:
          $ref: '#/components/schemas/TestLinks'
      type: object
    TestUsePublicBgp:
      default: true
      description: "Indicate if all available public BGP monitors should be used,\
        \ when ommited defaults to `bgpMeasurements` value."
      example: true
      type: boolean
    BgpTest:
      allOf:
      - $ref: '#/components/schemas/BaseBgpTest'
      - properties:
          prefix:
            description: "a.b.c.d is a network address, with the prefix length defined\
              \ as e. Prefixes can be any length from 8 to 24."
            type: string
        required:
        - prefix
        type: object
    BaseBgpTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - properties:
          enabled:
            $ref: '#/components/schemas/Enabled'
          monitors:
            $ref: '#/components/schemas/TestBgpMonitors'
          includeCoveredPrefixes:
            description: Indicate if queries for subprefixes detected under this prefix
              should included.
            example: true
            type: boolean
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
          alertsEnabled:
            description: Indicates if alerts are enabled.
            example: true
            type: boolean
          alertRules:
            description: A list of enabled alert rule objects.
            items:
              $ref: '#/components/schemas/AlertRule'
            type: array
          createdBy:
            $ref: '#/components/schemas/TestCreatedBy'
          createdDate:
            $ref: '#/components/schemas/TestCreatedDate'
          type:
            $ref: '#/components/schemas/TestBgpType'
        type: object
    InstantTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - properties:
          labels:
            $ref: '#/components/schemas/TestLabels'
          sharedWithAccounts:
            $ref: '#/components/schemas/TestSharedAccounts'
        type: object
    TestLabels:
      description: Labels to which the test is assigned. This field is not returned
        for Instant Tests.
      items:
        $ref: '#/components/schemas/TestLabel'
      readOnly: true
      type: array
    TestLabel:
      example:
        labelId: "961"
        name: Artem label
        isBuiltin: false
      properties:
        labelId:
          description: Label ID.
          type: string
        name:
          description: Name of the label.
          type: string
        isBuiltin:
          description: "Value indicating if the label in question is BuiltIn (Account\
            \ Admin, Organization Admin, Regular User)."
          type: boolean
      type: object
    TestSharedAccounts:
      items:
        $ref: '#/components/schemas/SharedWithAccount'
      readOnly: true
      type: array
    SharedWithAccount:
      properties:
        aid:
          description: Account group ID.
          example: "1234"
          type: string
        name:
          description: Account group name.
          example: Account name
          type: string
      type: object
    TestBgpMonitors:
      description: Contains list of enabled BGP monitors.
      items:
        $ref: '#/components/schemas/Monitor'
      readOnly: true
      type: array
    TestBgpType:
      example: bgp
      readOnly: true
      type: string
    UnexpandedAgentToServerTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/AgentToServerProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    UnexpandedTest:
      properties:
        interval:
          $ref: '#/components/schemas/TestInterval'
        alertsEnabled:
          description: Indicates if alerts are enabled.
          example: true
          type: boolean
        enabled:
          default: true
          description: Test is enabled.
          example: true
          type: boolean
      type: object
    AgentToServerProperties:
      properties:
        bandwidthMeasurements:
          description: "Set to `true` to enable bandwidth measurements, only applies\
            \ to Enterprise agents assigned to the test."
          example: true
          type: boolean
        continuousMode:
          description: "To enable continuous monitoring, set this parameter to `true`\
            \ to. \nWhen continuous monitoring is enabled, the following actions occur:\n\
            * `fixedPacketRate` is enforced\n* `bandwidthMeasurements` are disabled\n\
            * If the `protocol` is set to `tcp`, `probeMode` is set to `syn`.\n"
          example: false
          type: boolean
        fixedPacketRate:
          description: "If continuousMode is `false`, set the fixedPacketRate to a\
            \ value between 10-100. If `continuousMode` is `true`, set the `fixedPacketRate`\
            \ to `1`"
          example: 25
          maximum: 100
          minimum: 0
          type: integer
        mtuMeasurements:
          description: Set `true` to measure MTU sizes on network from agents to the
            target.
          example: false
          type: boolean
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        probeMode:
          $ref: '#/components/schemas/TestProbeMode'
        protocol:
          $ref: '#/components/schemas/TestProtocol'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        server:
          description: "The target name or IP address. If a port is set for the test,\
            \ it is appended to the target name or IP address using a colon."
          example: www.thousandeyes.com:80
          type: string
        dscp:
          description: DSCP label.
          example: Best Effort (DSCP 0)
          readOnly: true
          type: string
        dscpId:
          $ref: '#/components/schemas/TestDscpId'
        ipv6Policy:
          $ref: '#/components/schemas/TestIpv6Policy'
        pingPayloadSize:
          description: "Payload size (not total packet size) for the end-to-end metric's\
            \ probes, ping payload size allows values from 0 to 1400 bytes. When set\
            \ to null, payload sizes are 0 bytes for ICMP-based tests and 1 byte for\
            \ TCP-based tests."
          maximum: 1400
          minimum: 0
          type: integer
        networkMeasurements:
          default: false
          description: View packet loss in 1-second intervals. This is only available
            for 1-minute interval tests. Set to `true` to enable network measurements.
          example: false
          type: boolean
        type:
          example: agent-to-server
          readOnly: true
          type: string
      required:
      - server
      type: object
    TestBandwidthMeasurements:
      description: "Set to `true` to enable bandwidth measurements, only applies to\
        \ Enterprise agents assigned to the test."
      example: true
      type: boolean
    TestMtuMeasurements:
      description: Set `true` to measure MTU sizes on network from agents to the target.
      example: false
      type: boolean
    TestNumPathTraces:
      default: 3
      description: Number of path traces executed by the agent.
      example: 3
      maximum: 10
      minimum: 1
      type: integer
    TestPathTraceMode:
      default: classic
      description: Select `inSession` to perform the path trace within a TCP session.
      enum:
      - classic
      - in-session
      example: classic
      type: string
    TestProbeMode:
      default: auto
      description: "Probe mode used by network test, only valid when the protocol\
        \ is set to TCP."
      enum:
      - auto
      - sack
      - syn
      example: auto
      type: string
    TestProtocol:
      default: tcp
      description: "Protocol used by dependent network tests (end-to-end, path trace,\
        \ PMTUD)."
      enum:
      - tcp
      - icmp
      - udp
      example: tcp
      type: string
    TestRandomizedStartTime:
      default: false
      description: Indicates whether agents should randomize the start time in each
        test round.
      example: false
      type: boolean
    TestDscp:
      description: DSCP label.
      example: Best Effort (DSCP 0)
      readOnly: true
      type: string
    TestDscpId:
      default: "0"
      description: "DSCP ID [to see list for acceptable values](https://docs.thousandeyes.com/product-documentation/tests/dscp-options-in-network-tests)"
      enum:
      - "0"
      - "8"
      - "16"
      - "24"
      - "32"
      - "40"
      - "48"
      - "56"
      - "10"
      - "12"
      - "14"
      - "18"
      - "20"
      - "22"
      - "26"
      - "28"
      - "30"
      - "34"
      - "36"
      - "38"
      - "46"
      - "44"
      example: "0"
      type: string
    TestIpv6Policy:
      default: use-agent-policy
      description: IP version policy. Overrides the IPv6 policy configured at the
        agent level.
      enum:
      - force-ipv4
      - prefer-ipv6
      - force-ipv6
      - use-agent-policy
      example: use-agent-policy
      type: string
    TestBgpMeasurements:
      default: true
      description: Set to `true` to enable bgp measurements.
      example: true
      type: boolean
    AgentToServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/AgentToServerInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    BaseTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - properties:
          alertRules:
            description: Contains list of enabled alert rule objects.
            items:
              $ref: '#/components/schemas/AlertRule'
            type: array
        type: object
    AgentToServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/AgentToServerProperties'
    TestMonitorsProperties:
      properties:
        bgpMeasurements:
          default: true
          description: Set to `true` to enable bgp measurements.
          example: true
          type: boolean
        usePublicBgp:
          default: true
          description: "Indicate if all available public BGP monitors should be used,\
            \ when ommited defaults to `bgpMeasurements` value."
          example: true
          type: boolean
        monitors:
          description: Contains list of enabled BGP monitors.
          items:
            $ref: '#/components/schemas/Monitor'
          readOnly: true
          type: array
      type: object
    TestAgentsResponse:
      description: Contains list of agents.
      items:
        $ref: '#/components/schemas/AgentResponse'
      type: array
    UnexpandedAgentToAgentTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/AgentToAgentProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    AgentToAgentProperties:
      properties:
        direction:
          $ref: '#/components/schemas/TestDirection'
        dscp:
          description: DSCP label.
          example: Best Effort (DSCP 0)
          readOnly: true
          type: string
        dscpId:
          $ref: '#/components/schemas/TestDscpId'
        mss:
          description: "Maximum segment size, in bytes."
          example: 100
          maximum: 1400
          minimum: 20
          type: integer
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        port:
          default: 49153
          description: Target port.
          example: 49153
          maximum: 65535
          minimum: 1
          type: integer
        protocol:
          $ref: '#/components/schemas/AgentToAgentTestProtocol'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        targetAgentId:
          description: '`agentId` of the target agent for the test.'
          example: "2954"
          type: string
        throughputMeasurements:
          default: false
          description: Enable or disable throughput measurements. Throughput measurements
            cannot be enabled when the source or target of the test is a cloud agent.
          example: false
          type: boolean
        throughputDuration:
          default: 10000
          description: The throughput duration.
          example: 10000
          maximum: 30000
          minimum: 5000
          type: integer
        throughputRate:
          description: "The throughput rate, only applicable for UDP protocol."
          example: 10
          maximum: 1000
          minimum: 8
          type: integer
        fixedPacketRate:
          description: Sets packets rate sent to measure the network in packets per
            second.
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        type:
          example: agent-to-agent
          readOnly: true
          type: string
      required:
      - targetAgentId
      type: object
    TestDirection:
      default: to-target
      description: "Direction of the test, which affects how results are shown."
      enum:
      - to-target
      - from-target
      - bidirectional
      example: to-target
      type: string
    TestPort:
      default: 49153
      description: Target port.
      example: 49153
      maximum: 65535
      minimum: 1
      type: integer
    AgentToAgentTestProtocol:
      default: tcp
      enum:
      - tcp
      - udp
      example: tcp
      type: string
    TestFixedPacketRate:
      description: Sets packets rate sent to measure the network in packets per second.
      example: 50
      maximum: 100
      minimum: 0
      type: integer
    AgentToAgentTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/AgentToAgentInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    AgentToAgentInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/AgentToAgentProperties'
    UnexpandedDnsServerTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/DnsServerProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    DnsServerProperties:
      properties:
        bandwidthMeasurements:
          description: "Set to `true` to enable bandwidth measurements, only applies\
            \ to Enterprise agents assigned to the test."
          example: true
          type: boolean
        dnsServers:
          items:
            $ref: '#/components/schemas/TestDnsServer'
          type: array
        dnsTransportProtocol:
          $ref: '#/components/schemas/TestDnsTransportProtocol'
        domain:
          description: "The target record for the test, with the record type suffixed.\
            \ If no record type is specified, the test defaults to an ANY record."
          example: www.thousandeyes.com
          type: string
        mtuMeasurements:
          description: Set `true` to measure MTU sizes on network from agents to the
            target.
          example: false
          type: boolean
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          example: true
          type: boolean
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        probeMode:
          $ref: '#/components/schemas/TestProbeMode'
        protocol:
          $ref: '#/components/schemas/TestProtocol'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        recursiveQueries:
          description: Set true to run query with RD (recursion desired) flag enabled.
          example: true
          type: boolean
        ipv6Policy:
          $ref: '#/components/schemas/TestIpv6Policy'
        fixedPacketRate:
          description: Sets packets rate sent to measure the network in packets per
            second.
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        dnsQueryClass:
          $ref: '#/components/schemas/DnsQueryClass'
        type:
          example: dns-server
          readOnly: true
          type: string
      required:
      - dnsServers
      - domain
      type: object
    TestDnsServer:
      properties:
        serverId:
          description: Unique identifier of the DNS server.
          example: "1447"
          type: string
        serverName:
          description: Fully qualified domain name (FQDN) of DNS server.
          example: dns-example.net
          type: string
      type: object
    TestDnsTransportProtocol:
      default: udp
      description: Transport protocol used for DNS requests.
      enum:
      - udp
      - tcp
      example: udp
      type: string
    TestDomain:
      description: "The target record for the test, with the record type suffixed.\
        \ If no record type is specified, the test defaults to an ANY record."
      example: www.thousandeyes.com
      type: string
    TestNetworkMeasurements:
      default: true
      description: Enable or disable network measurements. Set to true to enable or
        false to disable network measurements.
      example: true
      type: boolean
    DnsQueryClass:
      description: "Domain class used by this test. 'in' stands for Internet, while\
        \ 'ch' stands for Chaos."
      enum:
      - in
      - ch
      example: in
      type: string
    DnsServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/DnsServerInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    DnsServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/DnsServerProperties'
    DnsServersRequest:
      properties:
        dnsServers:
          description: A list of DNS server FQDN.
          example:
          - dns-example.net
          - 8.8.8.8
          items:
            type: string
          readOnly: false
          type: array
          writeOnly: true
      type: object
    UnexpandedDnsTraceTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/DnsTraceProperties'
      - required:
        - interval
        type: object
    DnsTraceProperties:
      properties:
        dnsTransportProtocol:
          $ref: '#/components/schemas/TestDnsTransportProtocol'
        domain:
          description: "The target record for the test, with the record type suffixed.\
            \ If no record type is specified, the test defaults to an ANY record."
          example: www.thousandeyes.com
          type: string
        dnsQueryClass:
          $ref: '#/components/schemas/DnsQueryClass'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        type:
          example: dns-trace
          readOnly: true
          type: string
      required:
      - domain
      type: object
    DnsTraceTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/DnsTraceInstantTest'
      - required:
        - interval
        type: object
    DnsTraceInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/DnsTraceProperties'
    UnexpandedDnsSecTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/DnsSecProperties'
      - required:
        - interval
        type: object
    DnsSecProperties:
      properties:
        domain:
          description: "The target record for the test, with the record type suffixed.\
            \ If no record type is specified, the test defaults to an ANY record."
          example: www.thousandeyes.com
          type: string
        dnsQueryClass:
          $ref: '#/components/schemas/DnsQueryClass'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        type:
          example: dnssec
          readOnly: true
          type: string
      required:
      - domain
      type: object
    DnsSecTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/DnsSecInstantTest'
      - required:
        - interval
        type: object
    DnsSecInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/DnsSecProperties'
    UnexpandedHttpServerTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/HttpServerProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    HttpServerProperties:
      allOf:
      - $ref: '#/components/schemas/HttpServerBaseProperties'
      - properties:
          headers:
            $ref: '#/components/schemas/TestHeaders'
          downloadLimit:
            description: Specifies maximum number of bytes to download from the target
              object.
            example: 2048
            type: integer
          dnsOverride:
            description: IP address to use for DNS override.
            example: 8.8.8.8
            format: ipv4
            type: string
          randomizedStartTime:
            $ref: '#/components/schemas/TestRandomizedStartTime'
          postBody:
            description: "Enter the body for the HTTP POST request in this field.\
              \ No special escaping is necessary. If the post body is provided with\
              \ content, the `requestMethod` is automatically set to POST."
            example: "{ \"example\" : \"value\"}"
            type: string
          ipv6Policy:
            $ref: '#/components/schemas/TestIpv6Policy'
          type:
            $ref: '#/components/schemas/TestHttpType'
        required:
        - url
        type: object
    HttpServerBaseProperties:
      properties:
        authType:
          $ref: '#/components/schemas/TestAuthType'
        agentInterfaces:
          $ref: '#/components/schemas/AgentInterfaces'
        bandwidthMeasurements:
          description: "Set to `true` to enable bandwidth measurements, only applies\
            \ to Enterprise agents assigned to the test."
          example: true
          type: boolean
        clientCertificate:
          description: "String representation (containing newline characters) of client\
            \ certificate, the private key must be placed first, then the certificate."
          example: |
            -----BEGIN PRIVATE KEY-----
            MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
            -----END PRIVATE KEY-----
            -----BEGIN CERTIFICATE-----
            MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
            -----END CERTIFICATE-----
          type: string
        contentRegex:
          description: "Content regex, this field does not require escaping."
          example: (regex)+
          type: string
        customHeaders:
          $ref: '#/components/schemas/TestCustomHeaders'
        desiredStatusCode:
          default: default
          description: Specify the HTTP status code value that indicates a successful
            response. The default value accepts any 2xx or 3xx status code.
          example: "200"
          type: string
        distributedTracing:
          description: Adds distributed tracing headers to API requests using B3 and
            W3C standards.
          example: false
          type: boolean
        downloadLimit:
          description: Specifies maximum number of bytes to download from the target
            object.
          example: 2048
          type: integer
        dnsOverride:
          description: IP address to use for DNS override.
          example: 8.8.8.8
          format: ipv4
          type: string
        httpTargetTime:
          description: "Target time for HTTP server completion, specified in milliseconds."
          example: 100
          maximum: 5000
          minimum: 100
          type: integer
        httpTimeLimit:
          default: 5
          description: HTTP time limit in seconds.
          example: 5
          maximum: 60
          minimum: 5
          type: integer
        httpVersion:
          default: 2
          description: "HTTP protocol version. Set to '2' to prefer HTTP/2, or '1'\
            \ to use only HTTP/1.1."
          example: 2
          maximum: 2
          minimum: 1
          type: integer
        includeHeaders:
          default: true
          description: Set to `true` to capture response headers for objects loaded
            by the test.
          example: true
          type: boolean
        mtuMeasurements:
          description: Set `true` to measure MTU sizes on network from agents to the
            target.
          example: false
          type: boolean
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          example: true
          type: boolean
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        oAuth:
          $ref: '#/components/schemas/OAuth'
        password:
          description: Password for Basic/NTLM authentication.
          example: password
          type: string
          writeOnly: true
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        probeMode:
          $ref: '#/components/schemas/TestProbeMode'
        protocol:
          $ref: '#/components/schemas/TestProtocol'
        sslVersion:
          description: Reflects the verbose SSL protocol version used by a test.
          example: Auto
          readOnly: true
          type: string
        sslVersionId:
          $ref: '#/components/schemas/TestSslVersionId'
        url:
          description: Target for the test.
          example: www.thousandeyes.com
          type: string
        useNtlm:
          description: "Set to true to use NTLM, false to use Basic Authentication.\
            \ Requires username and password to be set."
          example: false
          type: boolean
        userAgent:
          description: User-agent string to be provided during the test.
          example: curl
          type: string
        username:
          description: Username for Basic/NTLM authentication.
          example: username
          type: string
        verifyCertificate:
          default: false
          description: Ignore or acknowledge certificate errors. Set to false to ignore
            certificate errors.
          example: false
          type: boolean
        allowUnsafeLegacyRenegotiation:
          default: true
          description: Allows TLS renegotiation with servers not supporting RFC 5746.
            Default Set to true to allow unsafe legacy renegotiation.
          example: true
          type: boolean
        followRedirects:
          default: true
          description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
            \ set this parameter to `false`."
          example: true
          type: boolean
        fixedPacketRate:
          description: Sets packets rate sent to measure the network in packets per
            second.
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        overrideAgentProxy:
          default: false
          description: "Flag indicating if a proxy other than the default should be\
            \ used. To override the default proxy for agents, set to `true` and specify\
            \ a value for `overrideProxyId`."
          example: false
          type: boolean
        overrideProxyId:
          description: ID of the proxy to be used if the default proxy is overridden.
          example: "281474976710706"
          type: string
        collectProxyNetworkData:
          default: false
          description: Indicates whether network data to the proxy should be collected.
          example: false
          type: boolean
      type: object
    TestAuthType:
      default: none
      description: HTTP authentication type.
      enum:
      - none
      - basic
      - ntlm
      - kerberos
      - oauth
      example: none
      type: string
    AgentInterfaces:
      properties:
        ipAddress:
          description: IP address of the agent interface.
          example: 192.1.1.0
          type: string
        agentId:
          description: The agent ID of the enterprise agent for the test.
          example: "2954"
          type: string
      type: object
    TestClientCertificate:
      description: "String representation (containing newline characters) of client\
        \ certificate, the private key must be placed first, then the certificate."
      example: |
        -----BEGIN PRIVATE KEY-----
        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
        -----END PRIVATE KEY-----
        -----BEGIN CERTIFICATE-----
        MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
        -----END CERTIFICATE-----
      type: string
    TestCustomHeaders:
      example:
        root:
          header1: value1
        domains:
          domain1.com:
            header2: value2
        all:
          header3: value3
      properties:
        root:
          additionalProperties:
            type: string
          description: Use these HTTP headers for root server request.
          type: object
        domains:
          additionalProperties:
            additionalProperties:
              type: string
            type: object
          description: Use these HTTP headers for the specified domains.
          type: object
        all:
          additionalProperties:
            type: string
          description: Use these HTTP headers for all domains.
          type: object
      type: object
    TestDesiredStatusCode:
      default: default
      description: Specify the HTTP status code value that indicates a successful
        response. The default value accepts any 2xx or 3xx status code.
      example: "200"
      type: string
    TestDistributedTracing:
      description: Adds distributed tracing headers to API requests using B3 and W3C
        standards.
      example: false
      type: boolean
    TestHttpTargetTime:
      description: "Target time for HTTP server completion, specified in milliseconds."
      example: 100
      maximum: 5000
      minimum: 100
      type: integer
    TestHttpTimeLimit:
      default: 5
      description: HTTP time limit in seconds.
      example: 5
      maximum: 60
      minimum: 5
      type: integer
    TestHttpVersion:
      default: 2
      description: "HTTP protocol version. Set to '2' to prefer HTTP/2, or '1' to\
        \ use only HTTP/1.1."
      example: 2
      maximum: 2
      minimum: 1
      type: integer
    TestIncludeHeaders:
      default: true
      description: Set to `true` to capture response headers for objects loaded by
        the test.
      example: true
      type: boolean
    OAuth:
      description: Use this only if you want to use OAuth as the authentication mechanism.
      example:
        configId: "123321123"
        testUrl: https://api.thousandeyes.com/v7/status
        requestMethod: get
        postBody: "client_id: ************"
        headers: "Authorization: Basic ************"
        authType: none
        username: user123
        password: '*******'
      properties:
        configId:
          description: The ID of the OAuth configuration.
          type: string
        testUrl:
          description: Target for the test.
          example: www.thousandeyes.com
          type: string
        requestMethod:
          $ref: '#/components/schemas/RequestMethod'
        postBody:
          description: "Enter the OAuth body for the HTTP POST request in this field\
            \ when using OAuth as the authentication mechanism. No special escaping\
            \ is required. If content is provided in the post body, the `requestMethod`\
            \ is automatically set to POST."
          type: string
        headers:
          description: Request headers used for OAuth.
          type: string
        authType:
          $ref: '#/components/schemas/TestAuthType'
        username:
          description: OAuth username
          type: string
        password:
          description: OAuth password
          type: string
      type: object
    TestUrl:
      description: Target for the test.
      example: www.thousandeyes.com
      type: string
    RequestMethod:
      description: HTTP request method.
      enum:
      - get
      - post
      - put
      - delete
      - patch
      - options
      - trace
      example: get
      type: string
    TestPassword:
      description: Password for Basic/NTLM authentication.
      example: password
      type: string
      writeOnly: true
    TestSslVersion:
      description: Reflects the verbose SSL protocol version used by a test.
      example: Auto
      readOnly: true
      type: string
    TestSslVersionId:
      default: "0"
      description: |
        SSL version options:

        * Use '0' for automatic selection.
        * Use '3' for SSLv3.
        * Use '4' for TLS v1.0.
        * Use '5' for TLS v1.1.
        * Use '6' for TLS v1.2.
        * Use '7' for TLS v1.3.
      enum:
      - "0"
      - "3"
      - "4"
      - "5"
      - "6"
      - "7"
      example: "0"
      type: string
    TestUseNtlm:
      description: "Set to true to use NTLM, false to use Basic Authentication. Requires\
        \ username and password to be set."
      example: false
      type: boolean
    TestUserAgent:
      description: User-agent string to be provided during the test.
      example: curl
      type: string
    TestUsername:
      description: Username for Basic/NTLM authentication.
      example: username
      type: string
    TestVerifyCertificate:
      default: false
      description: Ignore or acknowledge certificate errors. Set to false to ignore
        certificate errors.
      example: false
      type: boolean
    TestAllowUnsafeLegacyRenegotiation:
      default: true
      description: Allows TLS renegotiation with servers not supporting RFC 5746.
        Default Set to true to allow unsafe legacy renegotiation.
      example: true
      type: boolean
    TestFollowRedirects:
      default: true
      description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
        \ set this parameter to `false`."
      example: true
      type: boolean
    TestOverrideAgentProxy:
      default: false
      description: "Flag indicating if a proxy other than the default should be used.\
        \ To override the default proxy for agents, set to `true` and specify a value\
        \ for `overrideProxyId`."
      example: false
      type: boolean
    TestOverrideProxyId:
      description: ID of the proxy to be used if the default proxy is overridden.
      example: "281474976710706"
      type: string
    TestCollectProxyNetworkData:
      default: false
      description: Indicates whether network data to the proxy should be collected.
      example: false
      type: boolean
    TestHeaders:
      description: HTTP request headers used.
      example:
      - "header1: value1"
      - "header2: value2"
      items:
        type: string
      type: array
    TestHttpType:
      example: http-server
      readOnly: true
      type: string
    HttpServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/HttpServerInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    HttpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/HttpServerProperties'
    UnexpandedPageLoadTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/PageLoadProperties'
      - properties:
          httpInterval:
            $ref: '#/components/schemas/TestHttpInterval'
          subinterval:
            $ref: '#/components/schemas/TestSubInterval'
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    PageLoadProperties:
      allOf:
      - $ref: '#/components/schemas/HttpServerBaseProperties'
      - properties:
          emulatedDeviceId:
            description: "ID of the emulated device, if one was given when the test\
              \ was created."
            example: "2"
            type: string
          pageLoadTargetTime:
            description: "Target time for page load completion, specified in seconds\
              \ and cannot exceed the `pageLoadTimeLimit`."
            example: 10
            maximum: 30
            minimum: 1
            type: integer
          pageLoadTimeLimit:
            $ref: '#/components/schemas/TestPageLoadTimeLimit'
          blockDomains:
            $ref: '#/components/schemas/TestBlockDomains'
          disableScreenshot:
            $ref: '#/components/schemas/TestDisableScreenshot'
          allowMicAndCamera:
            $ref: '#/components/schemas/TestAllowMicAndCamera'
          allowGeolocation:
            $ref: '#/components/schemas/TestAllowGeolocation'
          browserLanguage:
            $ref: '#/components/schemas/TestBrowserLanguage'
          pageLoadingStrategy:
            $ref: '#/components/schemas/TestPageLoadingStrategy'
          randomizedStartTime:
            $ref: '#/components/schemas/TestRandomizedStartTime'
          type:
            $ref: '#/components/schemas/TestPageLoadType'
          identifyAgentTrafficWithUserAgent:
            $ref: '#/components/schemas/TestIdentifyAgentTrafficWithUserAgent'
        required:
        - url
        type: object
    TestPageLoadTimeLimit:
      default: 10
      description: Page load time limit. Must be larger than the `httpTimeLimit`.
      example: 10
      maximum: 60
      minimum: 5
      type: integer
    TestBlockDomains:
      description: Domains or full object URLs to be excluded from metrics and waterfall
        data for transaction tests.
      example: domain.com/
      type: string
    TestDisableScreenshot:
      default: false
      description: Enables or disables screenshots on error. Set true to not capture
      example: false
      type: boolean
    TestAllowMicAndCamera:
      default: false
      description: Set true allow the use of a fake mic and camera in the browser.
      example: false
      type: boolean
    TestAllowGeolocation:
      default: false
      description: Set true to use the agent’s geolocation by the web page.
      example: false
      type: boolean
    TestBrowserLanguage:
      description: Set one of the available browser language that you want to use
        to configure the browser.
      example: en-US
      type: string
    TestPageLoadingStrategy:
      default: normal
      description: "* `normal`: The test waits until the entire page is fully loaded,\
        \ including the downloading and parsing of HTML content as well as all associated\
        \ resources, before advancing to the next action in the transaction test script.\
        \ \n* `eager`: The test waits for the DOMContentLoaded event, indicating that\
        \ HTML content is downloaded and parsed, and the document reaches the \"interactive\"\
        \ readiness state, before proceeding to the next action in the test script.\n\
        * `none`: The test only waits for the download of HTML content. Once the HTML\
        \ is downloaded, the test continues to the next action in the transaction\
        \ test script without waiting for additional resources.\n"
      enum:
      - normal
      - eager
      - none
      example: normal
      type: string
    TestPageLoadType:
      example: page-load
      readOnly: true
      type: string
    TestIdentifyAgentTrafficWithUserAgent:
      default: false
      description: |
        Determines how agent traffic is identified:

        * `false`: Adds the `x-thousandeyes-agent: yes` header.
        * `true`: Appends `(ThousandEyes Agent)` to the `user-agent` header.

        For more information, see [Notes on Agent ID Strategy](https://docs.thousandeyes.com/product-documentation/browser-synthetics/test-settings-page-load-transaction#notes-on-agent-id-strategy).
      example: false
      type: boolean
    TestHttpInterval:
      description: HTTP test run interval. The interval between HTTP test runs in
        seconds cannot exceed the specified interval value and defaults to the same
        value as the interval if not set.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1800
      - 3600
      example: 120
      type: integer
    TestSubInterval:
      description: Subinterval for round-robin testing (in seconds). Must be less
        than or equal to interval and must evenly divide interval.
      enum:
      - 60
      - 120
      - 300
      - 600
      - 900
      - 1200
      - 1800
      - 3600
      example: 60
      type: integer
    PageLoadTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/PageLoadInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - properties:
          httpInterval:
            $ref: '#/components/schemas/TestHttpInterval'
          subinterval:
            $ref: '#/components/schemas/TestSubInterval'
        required:
        - interval
        type: object
    PageLoadInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/PageLoadProperties'
    UnexpandedWebTransactionTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/WebTransactionProperties'
      - properties:
          subinterval:
            $ref: '#/components/schemas/TestSubInterval'
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    WebTransactionProperties:
      allOf:
      - $ref: '#/components/schemas/HttpServerBaseProperties'
      - properties:
          emulatedDeviceId:
            description: "ID of the emulated device, if specified when the test was\
              \ created."
            example: "2"
            type: string
          targetTime:
            default: 10
            description: "Target completion time, in seconds. Defaults to 10. Cannot\
              \ exceed the `timeLimit` value."
            example: 1
            maximum: 180
            minimum: 0
            type: integer
          timeLimit:
            $ref: '#/components/schemas/TestWebTransactionTimeLimit'
          transactionScript:
            description: JavaScript of a web transaction test. Quotes must be escaped
              (precede " characters with \ ).
            example: "if (true) { return true; }"
            type: string
          blockDomains:
            $ref: '#/components/schemas/TestBlockDomains'
          disableScreenshot:
            $ref: '#/components/schemas/TestDisableScreenshot'
          allowMicAndCamera:
            $ref: '#/components/schemas/TestAllowMicAndCamera'
          allowGeolocation:
            $ref: '#/components/schemas/TestAllowGeolocation'
          browserLanguage:
            $ref: '#/components/schemas/TestBrowserLanguage'
          pageLoadingStrategy:
            $ref: '#/components/schemas/TestPageLoadingStrategy'
          randomizedStartTime:
            $ref: '#/components/schemas/TestRandomizedStartTime'
          type:
            $ref: '#/components/schemas/TestWebTransactionType'
          identifyAgentTrafficWithUserAgent:
            $ref: '#/components/schemas/TestIdentifyAgentTrafficWithUserAgent'
        required:
        - transactionScript
        - url
        type: object
    TestWebTransactionTimeLimit:
      default: 30
      description: Time limit for transaction in seconds.
      example: 30
      maximum: 180
      minimum: 5
      type: integer
    TestWebTransactionType:
      example: web-transactions
      readOnly: true
      type: string
    WebTransactionTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/WebTransactionInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - properties:
          subinterval:
            $ref: '#/components/schemas/TestSubInterval'
        required:
        - interval
        type: object
    WebTransactionInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/WebTransactionProperties'
      - properties:
          credentials:
            $ref: '#/components/schemas/TestCredentials'
        type: object
    TestCredentials:
      description: Contains a list of credential IDs (get `credentialId` from `/credentials`
        endpoint).
      example:
      - "3247"
      - "1051"
      items:
        type: string
      type: array
    UnexpandedApiTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/ApiProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    ApiProperties:
      properties:
        clientCertificate:
          description: "String representation (containing newline characters) of client\
            \ certificate, the private key must be placed first, then the certificate."
          example: |
            -----BEGIN PRIVATE KEY-----
            MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
            -----END PRIVATE KEY-----
            -----BEGIN CERTIFICATE-----
            MIICUTCCAfugAwIBAgIBADANBgkqhkiG9w0BAQQFADBXMQswCQYDVQQGEwJDTjEL
            -----END CERTIFICATE-----
          type: string
        clientCertDomainsAllowList:
          description: Comma separated list of domains to send the client certificate.
          example: www.thousandeyes.com
          type: string
        collectProxyNetworkData:
          default: false
          description: Indicates whether network data to the proxy should be collected.
          example: false
          type: boolean
        distributedTracing:
          description: Adds distributed tracing headers to API requests using B3 and
            W3C standards.
          example: false
          type: boolean
        followRedirects:
          default: true
          description: "To disable following HTTP/301 or HTTP/302 redirect directives,\
            \ set this parameter to `false`."
          example: true
          type: boolean
        mtuMeasurements:
          description: Set `true` to measure MTU sizes on network from agents to the
            target.
          example: false
          type: boolean
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          example: true
          type: boolean
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        overrideAgentProxy:
          default: false
          description: "Flag indicating if a proxy other than the default should be\
            \ used. To override the default proxy for agents, set to `true` and specify\
            \ a value for `overrideProxyId`."
          example: false
          type: boolean
        overrideProxyId:
          description: ID of the proxy to be used if the default proxy is overridden.
          example: "281474976710706"
          type: string
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        predefinedVariables:
          items:
            $ref: '#/components/schemas/ApiPredefinedVariable'
          type: array
        probeMode:
          $ref: '#/components/schemas/TestProbeMode'
        protocol:
          $ref: '#/components/schemas/TestProtocol'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        requests:
          items:
            $ref: '#/components/schemas/ApiRequest'
          type: array
        sslVersionId:
          $ref: '#/components/schemas/TestSslVersionId'
        targetTime:
          description: "Target time for completion metric, defaults to 50% of time\
            \ limit specified in seconds. (0 means default behavior)"
          example: 1
          maximum: 60
          minimum: 0
          type: integer
        timeLimit:
          default: 30
          description: Time limit for transaction in seconds. Exceeding this limit
            will result in a Timeout error.
          maximum: 180
          minimum: 5
          type: integer
        type:
          example: api
          readOnly: true
          type: string
        url:
          description: Target for the test.
          example: www.thousandeyes.com
          type: string
      required:
      - requests
      - url
      type: object
    ApiPredefinedVariable:
      properties:
        name:
          description: Variable name. Must be unique.
          example: myUsername
          type: string
        value:
          description: "Variable value, will be treated as string."
          example: ThousandEyesAccountUserName
          type: string
      type: object
    ApiRequest:
      properties:
        assertions:
          description: List of assertion objects.
          items:
            $ref: '#/components/schemas/ApiRequestAssertion'
          type: array
        authType:
          $ref: '#/components/schemas/ApiRequestAuthType'
        bearerToken:
          description: The bearer token if `authType = bearer-token`.
          example: abcd-1234-...
          type: string
          writeOnly: true
        body:
          description: POST/PUT request body. Must be in JSON format.
          type: string
        clientAuthentication:
          $ref: '#/components/schemas/ApiClientAuthentication'
        clientId:
          description: The application ID used when `authType` is set to "oauth2".
          example: client-id
          type: string
          writeOnly: true
        clientSecret:
          description: The private client secret used when `authType` is set to "oauth2".
          example: client-secret
          type: string
          writeOnly: true
        collectApiResponse:
          default: true
          description: Set to `true` if API response body should be collected and
            saved. Set to `false` if API response body should not be saved.
          example: true
          type: boolean
        headers:
          description: Array of API Request Header objects.
          items:
            $ref: '#/components/schemas/ApiRequestHeader'
          type: array
        method:
          $ref: '#/components/schemas/ApiRequestMethod'
        name:
          description: "API step name, must be unique."
          example: Step 1
          type: string
        password:
          description: The password if `authType = basic`.
          example: basic_pw123
          type: string
          writeOnly: true
        scope:
          description: Application-specific scope values for the access token when
            `authType` is "oauth2".
          example: "read, write, deploy"
          type: string
        tokenUrl:
          description: The endpoint used to request the access token when `authType`
            is "oauth2".
          example: https://id.cisco.com/oauth2/default/v1/token
          type: string
        url:
          description: "Request url. Supports variables in the format `{{variableName}}`."
          example: https://api.thousandeyes.com/v7/status
          type: string
        username:
          description: The username if `authType = basic`.
          example: ThousandEyesUserName
          type: string
        variables:
          description: Array of API post request variable objects.
          items:
            $ref: '#/components/schemas/ApiRequestVariable'
          type: array
        verifyCertificate:
          default: false
          description: Ignore or acknowledge certificate errors. Set to false to ignore
            certificate errors.
          example: false
          type: boolean
        waitTimeMs:
          description: "Post request delay before executing the next API requests,\
            \ in milliseconds."
          example: 0
          type: integer
      required:
      - name
      - url
      type: object
    ApiRequestAssertion:
      properties:
        name:
          $ref: '#/components/schemas/ApiRequestAssertionName'
        operator:
          $ref: '#/components/schemas/ApiRequestAssertionOperator'
        value:
          description: "The value of the assertion. If name = `status-code`, the status\
            \ code to assert. If name = `response-body`, the lookup value to assert."
          example: "200"
          type: string
      type: object
    ApiRequestAssertionName:
      description: Set to `status-code` to assert the response status code. Set to
        `response-body` to assert data is present in the response body. Use `ApiRequestAssertion`
        to set the value for the assertion.
      enum:
      - status-code
      - response-body
      example: status-code
      type: string
    ApiRequestAssertionOperator:
      description: "If `name = status-code``, accepted values are [is, is-not]. If\
        \ `name = response-body``, accepted values are [includes, not-includes, matches,\
        \ not-matches]`."
      enum:
      - is
      - is-not
      - includes
      - not-includes
      - matches
      - not-matches
      example: is
      type: string
    ApiRequestAuthType:
      default: none
      description: Will override the Authorization request header.
      enum:
      - none
      - basic
      - bearer-token
      - oauth2
      example: none
      type: string
    ApiClientAuthentication:
      description: The OAuth2 client authentication location type.
      enum:
      - basic-auth-header
      - in-body
      example: basic-auth-header
      type: string
    ApiRequestHeader:
      properties:
        key:
          description: Request header key.
          example: x-custom-header
          type: string
        value:
          description: "Request header value. Supports variables `{{variableName}}`."
          example: keep-alive
          type: string
      type: object
    ApiRequestMethod:
      description: HTTP request method.
      enum:
      - get
      - post
      - put
      - delete
      - patch
      example: get
      type: string
    ApiRequestVariable:
      properties:
        name:
          description: Variable name
          example: myTestName
          type: string
        value:
          description: The JSON path of data within the Response Body to assign to
            this variable.
          example: "tests[0].name"
          type: string
      type: object
    ApiTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/ApiInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    ApiInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/ApiProperties'
      - properties:
          credentials:
            $ref: '#/components/schemas/TestCredentials'
        type: object
    UnexpandedFtpServerTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/FtpServerProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    FtpServerProperties:
      properties:
        bandwidthMeasurements:
          description: "Set to `true` to enable bandwidth measurements, only applies\
            \ to Enterprise agents assigned to the test."
          example: true
          type: boolean
        downloadLimit:
          description: Specify maximum number of bytes to download from the target
            object.
          example: 1048576
          type: integer
        ftpTargetTime:
          description: Target time for operation completion; specified in milliseconds.
          maximum: 6000
          minimum: 1000
          type: integer
        ftpTimeLimit:
          default: 10
          description: Set the time limit for the test in seconds.
          example: 10
          maximum: 60
          minimum: 10
          type: integer
        mtuMeasurements:
          description: Set `true` to measure MTU sizes on network from agents to the
            target.
          example: false
          type: boolean
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          example: true
          type: boolean
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        password:
          description: Password for Basic/NTLM authentication.
          example: password
          type: string
          writeOnly: true
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        probeMode:
          $ref: '#/components/schemas/TestProbeMode'
        protocol:
          $ref: '#/components/schemas/TestProtocol'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        requestType:
          $ref: '#/components/schemas/FtpServerRequestType'
        url:
          description: Target for the test.
          example: www.thousandeyes.com
          type: string
        useActiveFtp:
          default: false
          description: Explicitly set the flag to use active FTP.
          example: false
          type: boolean
        useExplicitFtps:
          description: "Use explicit FTPS (ftp over SSL). By default, tests will autodetect\
            \ when it is appropriate to use FTPS."
          example: false
          type: boolean
        username:
          description: Username for Basic/NTLM authentication.
          example: username
          type: string
        fixedPacketRate:
          description: Sets packets rate sent to measure the network in packets per
            second.
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        ipv6Policy:
          $ref: '#/components/schemas/TestIpv6Policy'
        type:
          example: ftp-server
          readOnly: true
          type: string
      required:
      - requestType
      - url
      - username
      type: object
    FtpServerRequestType:
      description: Set the type of activity for the test.
      enum:
      - download
      - upload
      - list
      example: download
      type: string
    FtpServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/FtpServerInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    FtpServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/FtpServerProperties'
    UnexpandedSipServerTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/SipServerProperties'
      - properties:
          authUser:
            $ref: '#/components/schemas/TestSipAuthUser'
          password:
            $ref: '#/components/schemas/TestPassword'
          port:
            $ref: '#/components/schemas/TestPort'
          protocol:
            $ref: '#/components/schemas/SipTestProtocol'
          sipRegistrar:
            $ref: '#/components/schemas/TestSipRegistrar'
          user:
            $ref: '#/components/schemas/TestSipUser'
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        - port
        type: object
    SipServerProperties:
      properties:
        mtuMeasurements:
          description: Set `true` to measure MTU sizes on network from agents to the
            target.
          example: false
          type: boolean
        networkMeasurements:
          default: true
          description: Enable or disable network measurements. Set to true to enable
            or false to disable network measurements.
          example: true
          type: boolean
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        optionsRegex:
          description: "Options regex, this field does not require escaping."
          example: "[\"a-z\"]"
          type: string
        pathTraceMode:
          $ref: '#/components/schemas/TestPathTraceMode'
        probeMode:
          $ref: '#/components/schemas/TestProbeMode'
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        registerEnabled:
          default: false
          description: Set to true to perform SIP registration on the test target
            with the SIP REGISTER command.
          example: false
          type: boolean
        sipTargetTime:
          description: Target time for test completion in milliseconds.
          example: 1000
          maximum: 5000
          minimum: 100
          type: integer
        sipTimeLimit:
          default: 5
          description: Time limit in milliseconds.
          example: 5
          maximum: 10
          minimum: 5
          type: integer
        fixedPacketRate:
          description: Sets packets rate sent to measure the network in packets per
            second.
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        ipv6Policy:
          $ref: '#/components/schemas/TestIpv6Policy'
        type:
          example: sip-server
          readOnly: true
          type: string
      required:
      - port
      - targetSipCredentials
      type: object
    TestSipAuthUser:
      description: Username for authentication with SIP server.
      example: username
      type: string
    SipTestProtocol:
      default: tcp
      description: Transport layer for SIP communication.
      enum:
      - tcp
      - tls
      - udp
      example: tcp
      type: string
    TestSipRegistrar:
      description: "SIP server to be tested, specified by domain name or IP address."
      example: voice.thousandeyes.com
      type: string
    TestSipUser:
      description: "Username for SIP registration, should be unique within a ThousandEyes\
        \ account group."
      example: username
      type: string
    UpdateSipServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/SipServerInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - properties:
          targetSipCredentials:
            $ref: '#/components/schemas/TestSipCredentials'
        required:
        - interval
        - targetSipCredentials
        type: object
    SipServerInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/SipServerProperties'
    TestSipCredentials:
      properties:
        authUser:
          description: Username for authentication with SIP server.
          example: username
          type: string
        password:
          description: Password for Basic/NTLM authentication.
          example: password
          type: string
          writeOnly: true
        port:
          default: 49153
          description: Target port.
          example: 49153
          maximum: 65535
          minimum: 1
          type: integer
        protocol:
          $ref: '#/components/schemas/SipTestProtocol'
        sipRegistrar:
          description: "SIP server to be tested, specified by domain name or IP address."
          example: voice.thousandeyes.com
          type: string
        user:
          description: "Username for SIP registration, should be unique within a ThousandEyes\
            \ account group."
          example: username
          type: string
      required:
      - port
      type: object
    SipServerTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - $ref: '#/components/schemas/SipServerInstantTest'
      - $ref: '#/components/schemas/TestSipCredentials'
      required:
      - interval
    UnexpandedVoiceTest:
      allOf:
      - $ref: '#/components/schemas/UnexpandedTest'
      - $ref: '#/components/schemas/UnexpandedInstantTest'
      - $ref: '#/components/schemas/VoiceProperties'
      - properties:
          bgpMeasurements:
            $ref: '#/components/schemas/TestBgpMeasurements'
          usePublicBgp:
            $ref: '#/components/schemas/TestUsePublicBgp'
        required:
        - interval
        type: object
    VoiceProperties:
      properties:
        codec:
          description: Codec label
          example: G.711 @ 64 Kbps
          readOnly: true
          type: string
        codecId:
          description: "Coded ID, [see the list of acceptable values](https://docs.thousandeyes.com/product-documentation/internet-and-wan-monitoring/tests/working-with-test-settings#rtp-stream-advanced-settings-tab)"
          example: "0"
          type: string
        dscp:
          description: DSCP label.
          example: Best Effort (DSCP 0)
          readOnly: true
          type: string
        dscpId:
          $ref: '#/components/schemas/TestDscpId'
        duration:
          default: 5
          description: Duration of the test in seconds.
          example: 5
          maximum: 30
          minimum: 5
          type: integer
        jitterBuffer:
          default: 40
          description: De-jitter buffer size in seconds.
          example: 40
          maximum: 150
          minimum: 0
          type: integer
        numPathTraces:
          default: 3
          description: Number of path traces executed by the agent.
          example: 3
          maximum: 10
          minimum: 1
          type: integer
        port:
          description: Port number for the chosen protocol.
          example: 1024
          maximum: 65535
          minimum: 1024
          type: integer
        randomizedStartTime:
          default: false
          description: Indicates whether agents should randomize the start time in
            each test round.
          example: false
          type: boolean
        targetAgentId:
          description: Agent ID of the target agent for the test.
          example: "281474976710706"
          type: string
        type:
          example: voice
          readOnly: true
          type: string
      required:
      - targetAgentId
      type: object
    VoiceTest:
      allOf:
      - $ref: '#/components/schemas/BaseTest'
      - $ref: '#/components/schemas/VoiceInstantTest'
      - $ref: '#/components/schemas/TestMonitorsProperties'
      - required:
        - interval
        type: object
    VoiceInstantTest:
      allOf:
      - $ref: '#/components/schemas/InstantTest'
      - $ref: '#/components/schemas/VoiceProperties'
    TestAgentRequest:
      example:
        agentId: "125"
        sourceIpAddress: 1.1.1.1
      properties:
        agentId:
          description: The agent ID. Get `agentId` from `/agents` endpoint.
          type: string
        sourceIpAddress:
          description: "The IP address from the `ipAddresses` field in agent details,\
            \ used for interface selection. Get `ipAddresses` from the `/agents` endpoint."
          type: string
      required:
      - agentId
      type: object
    AlertRule:
      properties:
        ruleId:
          description: Unique ID of the rule.
          example: "127094"
          readOnly: true
          type: string
        ruleName:
          description: Name of the alert rule
          example: The End of the Internet
          readOnly: true
          type: string
        expression:
          description: String expression of alert rule
          example: ((hops((hopDelay >= 100 ms))))
          readOnly: true
          type: string
        direction:
          $ref: '#/components/schemas/AlertDirection'
        isDefault:
          description: "Alert rules allow up to 1 alert rule to be selected as a default\
            \ for each type. By checking the default option, this alert rule will\
            \ be automatically included on subsequently created tests that test a\
            \ metric used in alerting here"
          example: true
          readOnly: true
          type: boolean
        alertType:
          $ref: '#/components/schemas/AlertType'
        minimumSources:
          description: The minimum number of agents or monitors that must meet the
            specified criteria in order to trigger the alert
          example: 10
          readOnly: true
          type: integer
        minimumSourcesPct:
          description: the minimum percentage of all assigned agents or monitors that
            must meet the specified criteria in order to trigger the alert
          example: 99
          readOnly: true
          type: integer
        roundsViolatingMode:
          $ref: '#/components/schemas/AlertRoundsViolationMode'
        roundsViolatingOutOf:
          description: Specifies the divisor (y value) for the “X of Y times” condition.
          example: 5
          readOnly: true
          type: integer
        roundsViolatingRequired:
          description: Specifies the numerator (x value) for the “X of Y times” condition
          example: 2
          readOnly: true
          type: integer
        sensitivityLevel:
          $ref: '#/components/schemas/SensitivityLevel'
        severity:
          $ref: '#/components/schemas/Severity'
      type: object
    RuleId:
      description: Unique ID of the rule.
      example: "127094"
      readOnly: true
      type: string
    AlertDirection:
      description: "Direction for applicable alert types (eg. path trace, End-to-End\
        \ (Agent) etc.)"
      enum:
      - to-target
      - from-target
      - bidirectional
      example: to-target
      type: string
    AlertType:
      description: "Type of alert being triggered. In multi-layered tests, this value\
        \ represents the layer the alert relates to. See [Alert Details](https://developer.cisco.com/docs/thousandeyes/retrieve-alert-details/)\
        \ documentation for a list of possible values"
      enum:
      - page-load
      - http-server
      - end-to-end-server
      - end-to-end-agent
      - voice
      - dns-server
      - dns-trace
      - dnssec
      - bgp
      - path-trace
      - ftp
      - sip-server
      - transactions
      - web-transactions
      - agent
      - network-outage
      - application-outage
      - device-device
      - device-interface
      - endpoint-network-server
      - endpoint-http-server
      - endpoint-path-trace
      - endpoint-browser-sessions-agent
      - endpoint-browser-sessions-application
      - api
      - web-transaction
      - unknown
      example: http-server
      type: string
    AlertRoundsViolationMode:
      description: '`exact` requires the same agents to meet the threshold in consecutive
        rounds. `auto` is only enabled for CEA and Endpoint Scheduled test rules.
        The default is `any`.'
      enum:
      - exact
      - any
      - auto
      example: exact
      readOnly: true
      type: string
    SensitivityLevel:
      description: Used when `roundsViolatingMode` is set to `auto`. The default is
        `medium`. Higher sensitivity increases the likelihood of triggering alerts.
      enum:
      - high
      - medium
      - low
      example: medium
      readOnly: true
      type: string
    Severity:
      description: The severity of the alert.
      enum:
      - info
      - major
      - minor
      - critical
      - unknown
      example: major
      type: string
    Monitor:
      properties:
        countryId:
          description: Country ID
          example: GB
          readOnly: true
          type: string
        monitorId:
          description: BGP monitor ID
          example: "1234"
          readOnly: true
          type: string
        ipAddress:
          description: IP address of the BGP monitor
          example: 4.69.184.193
          type: string
        network:
          description: Name of the autonomous system in which the monitor is found
          example: "Level 3 Communications, Inc. (AS 3356)"
          type: string
        monitorType:
          $ref: '#/components/schemas/MonitorType'
        monitorName:
          description: Display name of the BGP monitor
          example: "Seattle, WA"
          type: string
      type: object
    MonitorType:
      description: Type of monitor
      enum:
      - public
      - private
      example: public
      type: string
    AgentResponse:
      allOf:
      - properties:
          agentType:
            $ref: '#/components/schemas/CloudEnterpriseAgentType'
        required:
        - agentType
      - $ref: '#/components/schemas/SimpleAgent'
    CloudEnterpriseAgentType:
      description: Type of the agent.
      enum:
      - cloud
      - enterprise-cluster
      - enterprise
      example: enterprise-cluster
      readOnly: true
      type: string
    SimpleAgent:
      allOf:
      - $ref: '#/components/schemas/AgentBase'
      - properties:
          agentId:
            description: Unique ID of the agent.
            example: "281474976710706"
            readOnly: true
            type: string
          agentName:
            description: Name of the agent.
            example: thousandeyes-stg-va-254
            type: string
          location:
            description: Location of the agent.
            example: San Francisco Bay Area
            readOnly: true
            type: string
          countryId:
            description: 2-digit ISO country code
            example: US
            readOnly: true
            type: string
          enabled:
            description: Flag indicating if the agent is enabled.
            example: true
            type: boolean
          prefix:
            description: Prefix containing agents public IP address.
            example: 99.128.0.0/11
            readOnly: true
            type: string
          verifySslCertificates:
            description: Flag indicating if has normal SSL operations or  if instead
              it's set to ignore SSL errors on browserbot-based tests.
            example: true
            readOnly: true
            type: boolean
        type: object
      type: object
    AgentBase:
      properties:
        ipAddresses:
          description: Array of private IP addresses.
          example:
          - 99.139.65.220
          - 9bbd:8a0a:a257:5876:288b:6cb2:3f36:64ce
          items:
            type: string
          readOnly: true
          type: array
        publicIpAddresses:
          description: Array of public IP addresses.
          example:
          - 192.168.1.78
          - f9b2:3a21:f25c:d300:03f4:586d:f8d6:4e1c
          items:
            type: string
          readOnly: true
          type: array
        network:
          description: Network (including ASN) of agent’s public IP.
          example: "AT&T Services, Inc. (AS 7018)"
          readOnly: true
          type: string
      type: object
  securitySchemes:
    BearerAuth:
      description: Bearer authentication token
      scheme: bearer
      type: http
